//Properties
server.port=8000
spring.jpa.show-sql=true
spring.h2.console.enabled=true
spring.datasource.platform=h2
spring.datasource.url=jdbc:h2:mem:testdb

//Secure Config
package com.example.project;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@Configuration
@EnableWebSecurity
public class SpringSecurityConfig extends WebSecurityConfigurerAdapter {
	@Autowired
	private AuthenticationEntryPoint authEntryPoint;
	@Override
	protected void configure(HttpSecurity http) throws Exception {
		http.csrf().disable().authorizeRequests()
			.anyRequest().authenticated()
				.and().httpBasic()
				.authenticationEntryPoint(authEntryPoint);
	}
	@Autowired
	public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {
auth.inMemoryAuthentication().withUser("username").password("password").roles("USER");
	}
}

//Authentification Entrypoint
package com.example.project;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint;
import org.springframework.stereotype.Component;

@Component
public class AuthenticationEntryPoint extends BasicAuthenticationEntryPoint {
	@Override
    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authEx)
      throws IOException, ServletException {
        response.addHeader("LoginUser", "Basic " +getRealmName());
        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
        PrintWriter writer = response.getWriter();
        writer.println("HTTP Status 401 - " + authEx.getMessage());
    }
	@Override
    public void afterPropertiesSet() throws Exception {
        setRealmName("springboot");
        super.afterPropertiesSet();
   }
}

//Hospital
package com.example.project;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.*;

@Entity
@Table(name="HHOSPITAL")
public class Hospital {
   @Id
   @GeneratedValue(strategy = GenerationType.AUTO)
   @Column(name="ID")
   private int id;
   @Column(name="NAME")
   private String name;
   @Column(name="CITY")
   private String city;
   @Column(name="RATING")
   private double rating;
   public Hospital(){

   }

   public Hospital(int id, String name,String city, double rating){
     this.id=id;
     this.name=name;
     this.city=city;
     this.rating=rating;
   }

	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;
	}
	public double getRating() {
		return rating;
	}
	public void setRating(double rating) {
		this.rating = rating;
	}

  @Override
  public String toString(){
    return "Hospital [id="+id+",name="+name+",city="+city+",rating="+rating+"]";
  }

}

//Hospital Controller
package com.example.project;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;



@RestController
@RequestMapping("/test/")
public class HospitalController {

    @Autowired
    private HospitalService hospitalService;


@RequestMapping(value = "/hospital/{id}" , method = RequestMethod.GET)
public @ResponseBody Hospital getHospital(@PathVariable("id") int id) throws Exception {
        return hospitalService.getHospital(id);
    }

@RequestMapping(value = "/hospitals",method=RequestMethod.GET)
public @ResponseBody List<Hospital> getAllHospitals() throws Exception {
		return hospitalService.getAllHospitals();
    }


@RequestMapping(value="/hospitals",method=RequestMethod.PUT)
public ResponseEntity<String> addHospital(@RequestBody Hospital hospital  ) {
hospitalService.addHospital(hospital);
      return new ResponseEntity<>(HttpStatus.OK);
}


public ResponseEntity<String> updateHospital(@RequestBody Hospital hospital) {
	hospitalService.updateHospital(hospital);
      return new ResponseEntity<>(HttpStatus.OK);
}

@RequestMapping(value="/hospitals", method=RequestMethod.DELETE)
public ResponseEntity<String> deleteHospital(@RequestBody Hospital hospital) {
	hospitalService.deleteHospital(hospital);
      return new ResponseEntity<>(HttpStatus.NO_CONTENT);
}

}

//HospitalRepository
package com.example.project;

import org.springframework.data.repository.CrudRepository;

public interface HospitalRepository extends CrudRepository<Hospital,Integer>{
@Query("Select h from HOSPITAL h where h.ID=?1")
public Hospital hospitalById(Integer id);

 //public Hospital findHospitalById(Integer id);
  @Override
  public List<Hospital> findAll();
}

//HospitalService
package com.example.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;



@Service
public class HospitalService {
	
	@Autowired
	private HospitalRepository hospitalRepository;


public List<Hospital> getAllHospitals(){
	return hospitalRepository.findAll();
}

public Hospital getHospital(int id){
	return hospitalRepository.hospitalById(id);
}

public void addHospital(Hospital hospital){
	hospitalRepository.save(hospital);
}

public void updateHospital(Hospital hospital){
	hospitalRepository.save(hospital);
}

public void deleteHospital(Hospital hospital) {
	hospitalRepository.delete(hospital);
}
}
